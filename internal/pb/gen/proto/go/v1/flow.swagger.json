{
  "swagger": "2.0",
  "info": {
    "title": "v1/flow.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FlowService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gw/v1/flow/create": {
      "post": {
        "operationId": "FlowService_CreateFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/delete": {
      "post": {
        "operationId": "FlowService_DeleteFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/get": {
      "post": {
        "operationId": "FlowService_GetFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/list": {
      "post": {
        "operationId": "FlowService_ListFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/v1/flow/update": {
      "post": {
        "operationId": "FlowService_UpdateFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    }
  },
  "definitions": {
    "AmUni": {
      "type": "object",
      "properties": {
        "gwei": {
          "type": "string"
        },
        "eth": {
          "type": "string"
        },
        "usd": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "wei": {
          "type": "string"
        }
      }
    },
    "Amount": {
      "type": "object",
      "properties": {
        "sendAll": {
          "type": "boolean"
        },
        "sendPercent": {
          "type": "number",
          "format": "float"
        },
        "sendAmount": {
          "type": "number",
          "format": "float",
          "title": "deprecated"
        },
        "sendValue": {
          "type": "string"
        },
        "send": {
          "$ref": "#/definitions/AmUni"
        },
        "balance": {
          "$ref": "#/definitions/AmUni"
        },
        "gasEstimated": {
          "$ref": "#/definitions/AmUni"
        }
      },
      "required": [
        "kind"
      ]
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CreateFlowRequest": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "label",
        "tasks"
      ]
    },
    "CreateFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "DelayTask": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "waitFor": {
          "type": "string",
          "format": "date-time"
        },
        "random": {
          "type": "boolean"
        },
        "minRandom": {
          "type": "string",
          "format": "int64"
        },
        "maxRandom": {
          "type": "string",
          "format": "int64"
        },
        "randomDuration": {
          "type": "string"
        }
      },
      "required": [
        "duration",
        "random"
      ]
    },
    "DeleteFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DeleteFlowResponse": {
      "type": "object"
    },
    "EzkaliburSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "GetFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "IzumiSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "ListFlowRequest": {
      "type": "object"
    },
    "ListFlowResponse": {
      "type": "object",
      "properties": {
        "flows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/flow.Flow"
          }
        }
      },
      "required": [
        "flows"
      ]
    },
    "MaverickSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "MockTask": {
      "type": "object",
      "title": "deprecated"
    },
    "MuteioSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "Network": {
      "type": "string",
      "enum": [
        "ARBITRUM",
        "OPTIMISM",
        "BinanaceBNB",
        "Etherium",
        "POLIGON",
        "AVALANCHE",
        "GOERLIETH",
        "ZKSYNCERA",
        "ZKSYNCERATESTNET",
        "ZKSYNCLITE"
      ],
      "default": "ARBITRUM"
    },
    "OkexBinanaceTask": {
      "type": "object",
      "properties": {
        "okexWithdrawerId": {
          "type": "string"
        },
        "okexToken": {
          "type": "string"
        },
        "okexNetwork": {
          "type": "string"
        },
        "binanaceDepositAddr": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        },
        "withdrawTxId": {
          "type": "string"
        }
      },
      "title": "deprecated",
      "required": [
        "okexWithdrawerId",
        "binanaceWithdrawerId",
        "okexNetwork",
        "okexToken",
        "binanaceDepositAddr"
      ]
    },
    "OkexDepositTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "okexAccName": {
          "type": "string",
          "title": "deprecated"
        },
        "okexAddr": {
          "type": "string",
          "title": "deprecated"
        },
        "token": {
          "$ref": "#/definitions/Token"
        },
        "address": {
          "type": "string"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "txComplete": {
          "type": "boolean",
          "title": "deprecated"
        },
        "subMainTransfer": {
          "type": "boolean"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "token"
      ]
    },
    "OrbiterBridgeTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "orbiterReceiverAddr": {
          "type": "string"
        },
        "orbiterSenderAddr": {
          "type": "string"
        },
        "swapCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken"
      ]
    },
    "ProcessStatus": {
      "type": "string",
      "enum": [
        "StatusReady",
        "StatusRunning",
        "StatusError",
        "StatusDone",
        "StatusStop",
        "StatusRetry"
      ],
      "default": "StatusReady",
      "title": "- StatusStop: delete"
    },
    "SnapshotVoteProposal": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "msg": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "retryCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SnapshotVoteTask": {
      "type": "object",
      "properties": {
        "space": {
          "type": "string"
        },
        "proposal": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SnapshotVoteProposal"
          }
        }
      },
      "required": [
        "proposal",
        "space"
      ]
    },
    "SpaceFiSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "StargateBridgeTask": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "fee": {
          "type": "string",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "layerZeroStatus": {
          "type": "string"
        },
        "lzscanUrl": {
          "type": "string"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken",
        "amount"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "Swap1inchTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromTokenName": {
          "type": "string"
        },
        "fromTokenCode": {
          "type": "string"
        },
        "fromTokenAddr": {
          "type": "string"
        },
        "toTokenName": {
          "type": "string"
        },
        "toTokenCode": {
          "type": "string"
        },
        "toTokenAddr": {
          "type": "string"
        },
        "sendAll": {
          "type": "boolean"
        },
        "sendPercent": {
          "type": "string",
          "format": "int64"
        },
        "sendAmount": {
          "type": "number",
          "format": "float"
        },
        "txId": {
          "type": "string"
        },
        "txCompleted": {
          "type": "boolean"
        },
        "swapCompleted": {
          "type": "boolean"
        }
      },
      "required": [
        "network",
        "fromTokenName",
        "fromTokenCode",
        "fromTokenAddr",
        "toTokenName",
        "toTokenCode",
        "toTokenAddr",
        "amount"
      ]
    },
    "SyncSwapLPTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "a": {
          "$ref": "#/definitions/Token"
        },
        "b": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        },
        "add": {
          "type": "boolean"
        }
      },
      "required": [
        "amount",
        "network",
        "a",
        "b",
        "add"
      ]
    },
    "SyncSwapTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "amountKind": {
          "type": "string",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "swapCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "fromToken",
        "toToken",
        "amount",
        "amountKind"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType"
        },
        "description": {
          "type": "string"
        },
        "stargateBridgeTask": {
          "$ref": "#/definitions/StargateBridgeTask"
        },
        "mockTask": {
          "$ref": "#/definitions/MockTask"
        },
        "delayTask": {
          "$ref": "#/definitions/DelayTask"
        },
        "withdrawExchangeTask": {
          "$ref": "#/definitions/WithdrawExchangeTask"
        },
        "okexDepositTask": {
          "$ref": "#/definitions/OkexDepositTask"
        },
        "testNetBridgeSwapTask": {
          "$ref": "#/definitions/TestNetBridgeSwapTask"
        },
        "snapshotVoteTask": {
          "$ref": "#/definitions/SnapshotVoteTask"
        },
        "okexBinanaceTask": {
          "$ref": "#/definitions/OkexBinanaceTask",
          "title": "deprecated"
        },
        "swap1inchTask": {
          "$ref": "#/definitions/Swap1inchTask"
        },
        "syncSwapTask": {
          "$ref": "#/definitions/SyncSwapTask"
        },
        "zkSyncOfficialBridgeToEthereumTask": {
          "$ref": "#/definitions/ZkSyncOfficialBridgeToEthereumTask"
        },
        "orbiterBridgeTask": {
          "$ref": "#/definitions/OrbiterBridgeTask"
        },
        "zkSyncOfficialBridgeFromEthereumTask": {
          "$ref": "#/definitions/ZkSyncOfficialBridgeFromEthereumTask"
        },
        "wETHTask": {
          "$ref": "#/definitions/WETHTask"
        },
        "muteioSwapTask": {
          "$ref": "#/definitions/MuteioSwapTask"
        },
        "syncSwapLPTask": {
          "$ref": "#/definitions/SyncSwapLPTask"
        },
        "maverickSwapTask": {
          "$ref": "#/definitions/MaverickSwapTask"
        },
        "spaceFiSwapTask": {
          "$ref": "#/definitions/SpaceFiSwapTask"
        },
        "velocoreSwapTask": {
          "$ref": "#/definitions/VelocoreSwapTask"
        },
        "izumiSwapTask": {
          "$ref": "#/definitions/IzumiSwapTask"
        },
        "veSyncSwapTask": {
          "$ref": "#/definitions/VeSyncSwapTask"
        },
        "ezkaliburSwapTask": {
          "$ref": "#/definitions/EzkaliburSwapTask"
        },
        "zkSwapTask": {
          "$ref": "#/definitions/ZkSwapTask"
        }
      },
      "required": [
        "weight",
        "taskType",
        "description"
      ]
    },
    "TaskTx": {
      "type": "object",
      "properties": {
        "txCompleted": {
          "type": "boolean"
        },
        "txId": {
          "type": "string"
        },
        "retryCount": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "title": "mandatory"
        },
        "network": {
          "$ref": "#/definitions/Network",
          "title": "mandatory"
        },
        "code": {
          "type": "string",
          "title": "mandatory"
        },
        "gasEstimated": {
          "$ref": "#/definitions/AmUni"
        },
        "gasResult": {
          "$ref": "#/definitions/AmUni"
        },
        "gasLimit": {
          "$ref": "#/definitions/AmUni"
        },
        "multiplier": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "TaskType": {
      "type": "string",
      "enum": [
        "StargateBridge",
        "Mock",
        "Delay",
        "WithdrawExchange",
        "OkexDeposit",
        "TestNetBridgeSwap",
        "SnapshotVote",
        "OkexBinance",
        "Swap1inch",
        "SyncSwap",
        "ZkSyncOfficialBridgeToEthereum",
        "OrbiterBridge",
        "ZkSyncOfficialBridgeFromEthereum",
        "WETH",
        "MuteioSwap",
        "SyncSwapLP",
        "MaverickSwap",
        "SpaceFISwap",
        "VelocoreSwap",
        "IzumiSwap",
        "VeSyncSwap",
        "EzkaliburSwap",
        "ZkSwap"
      ],
      "default": "StargateBridge",
      "title": "- OkexBinance: deprecated"
    },
    "TestNetBridgeSwapTask": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/Network"
        },
        "minAmount": {
          "type": "string"
        },
        "maxAmount": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "network",
        "minAmount",
        "maxAmount"
      ]
    },
    "Token": {
      "type": "string",
      "enum": [
        "USDT",
        "ETH",
        "USDC",
        "STG",
        "BNB",
        "MATIC",
        "AVAX",
        "veSTG",
        "WETH",
        "LUSD",
        "LSD",
        "MUTE",
        "MAV",
        "SPACE",
        "VC",
        "IZI"
      ],
      "default": "USDT"
    },
    "UpdateFlowRequest": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "UpdateFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "VeSyncSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "VelocoreSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "WETHTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "wrap": {
          "type": "boolean"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "wrap"
      ]
    },
    "WithdrawExchangeTask": {
      "type": "object",
      "properties": {
        "withdrawerId": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "amountMin": {
          "type": "string"
        },
        "amountMax": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "withdrawOrderId": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        },
        "withdrawAddr": {
          "type": "string"
        },
        "useExternalAddr": {
          "type": "boolean"
        },
        "sendAllCoins": {
          "type": "boolean"
        }
      },
      "required": [
        "withdrawerId",
        "network",
        "amountMin",
        "amountMax",
        "token",
        "withdrawOrderId"
      ]
    },
    "ZkSwapTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "fromToken",
        "toToken"
      ]
    },
    "ZkSyncOfficialBridgeFromEthereumTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount"
      ]
    },
    "ZkSyncOfficialBridgeToEthereumTask": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "amountKind": {
          "type": "string",
          "title": "deprecated"
        },
        "txCompleted": {
          "type": "boolean",
          "title": "deprecated"
        },
        "txId": {
          "type": "string",
          "title": "deprecated"
        },
        "tx": {
          "$ref": "#/definitions/TaskTx"
        }
      },
      "required": [
        "amount",
        "network",
        "amountKind"
      ]
    },
    "flow.Flow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Task"
          }
        },
        "nextId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "label",
        "payload",
        "createdAt",
        "tasks"
      ]
    }
  }
}
