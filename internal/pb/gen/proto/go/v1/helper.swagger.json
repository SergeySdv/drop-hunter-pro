{
  "swagger": "2.0",
  "info": {
    "title": "v1/helper.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "HelperService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gw/v1/billing/history": {
      "post": {
        "operationId": "HelperService_GetBillingHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetBillingHistoryRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetBillingHistoryReq"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/billing/order/create": {
      "post": {
        "operationId": "HelperService_CreateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateOrderRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrderReq"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/billing/order/history": {
      "post": {
        "operationId": "HelperService_GetOrderHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetOrderHistoryRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOrderHistoryReq"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/billing/order/status": {
      "post": {
        "operationId": "HelperService_GetOrderStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetOrderStatusRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOrderStatusReq"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/helper/cast-wei": {
      "post": {
        "operationId": "HelperService_CastWEI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CastWEIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CastWEIRequest"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/helper/stargate-bridge-fee/estimate": {
      "post": {
        "operationId": "HelperService_EstimateStargateBridgeFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EstimateStargateBridgeFeeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstimateStargateBridgeFeeRequest"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/helper/validatePK": {
      "post": {
        "operationId": "HelperService_ValidatePK",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidatePKResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidatePKRequest"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/helper/validateProxy": {
      "post": {
        "operationId": "HelperService_ValidateProxy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidateProxyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateProxyRequest"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/impact/daily": {
      "post": {
        "operationId": "HelperService_TransactionsDailyImpact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/TransactionsDailyImpactRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionsDailyImpactReq"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    },
    "/api/gw/v1/user": {
      "post": {
        "operationId": "HelperService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUserRequest"
            }
          }
        ],
        "tags": [
          "HelperService"
        ]
      }
    }
  },
  "definitions": {
    "AmUni": {
      "type": "object",
      "properties": {
        "gwei": {
          "type": "string"
        },
        "eth": {
          "type": "string"
        },
        "usd": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network"
        },
        "wei": {
          "type": "string"
        }
      }
    },
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CastWEIRequest": {
      "type": "object",
      "properties": {
        "wei": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/Network"
        }
      },
      "required": [
        "wei",
        "network"
      ]
    },
    "CastWEIResponse": {
      "type": "object",
      "properties": {
        "am": {
          "$ref": "#/definitions/AmUni"
        }
      },
      "required": [
        "am"
      ]
    },
    "CreateOrderReq": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "am": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "am"
      ]
    },
    "CreateOrderRes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "coinAddrUrl": {
          "type": "string"
        },
        "am": {
          "type": "number",
          "format": "double"
        },
        "toWallet": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "coinAddrUrl",
        "am",
        "toWallet"
      ]
    },
    "EstimateStargateBridgeFeeRequest": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/Network"
        },
        "to": {
          "$ref": "#/definitions/Network"
        },
        "profileId": {
          "type": "string"
        }
      },
      "required": [
        "from",
        "to",
        "profileId"
      ]
    },
    "EstimateStargateBridgeFeeResponse": {
      "type": "object",
      "properties": {
        "wei": {
          "type": "string",
          "format": "int64"
        },
        "usd": {
          "type": "string"
        },
        "eth": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "wei",
        "usd",
        "eth"
      ]
    },
    "GetBillingHistoryReq": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "offset"
      ]
    },
    "GetBillingHistoryRes": {
      "type": "object",
      "properties": {
        "records": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TaskHistoryRecord"
          }
        }
      },
      "required": [
        "records"
      ]
    },
    "GetOrderHistoryReq": {
      "type": "object"
    },
    "GetOrderHistoryRes": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Order"
          }
        }
      },
      "required": [
        "orders"
      ]
    },
    "GetOrderStatusReq": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        }
      },
      "required": [
        "orderId",
        "user_id"
      ]
    },
    "GetOrderStatusRes": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ]
    },
    "GetUserRequest": {
      "type": "object"
    },
    "GetUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "funds": {
          "type": "string"
        },
        "taskPrice": {
          "type": "string"
        },
        "payableTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskType"
          }
        },
        "nonpayableTasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskType"
          }
        }
      },
      "required": [
        "id",
        "email",
        "funds",
        "taskPrice",
        "payableTasks",
        "nonpayableTasks"
      ]
    },
    "Network": {
      "type": "string",
      "enum": [
        "ARBITRUM",
        "OPTIMISM",
        "BinanaceBNB",
        "Etherium",
        "POLIGON",
        "AVALANCHE",
        "GOERLIETH",
        "ZKSYNCERA",
        "ZKSYNCERATESTNET",
        "ZKSYNCLITE"
      ],
      "default": "ARBITRUM"
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "net": {
          "type": "string"
        },
        "coinAddrUrl": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "confirmedAt": {
          "type": "string",
          "format": "int64"
        },
        "am": {
          "type": "number",
          "format": "double"
        },
        "toWallet": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "net",
        "coinAddrUrl",
        "status",
        "createdAt",
        "confirmedAt",
        "am",
        "toWallet"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "TaskHistoryRecord": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "taskPrice": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "processId",
        "taskType",
        "taskPrice",
        "taskId"
      ]
    },
    "TaskType": {
      "type": "string",
      "enum": [
        "StargateBridge",
        "Mock",
        "Delay",
        "WithdrawExchange",
        "OkexDeposit",
        "TestNetBridgeSwap",
        "SnapshotVote",
        "OkexBinance",
        "Swap1inch",
        "SyncSwap",
        "ZkSyncOfficialBridgeToEthereum",
        "OrbiterBridge",
        "ZkSyncOfficialBridgeFromEthereum",
        "WETH",
        "MuteioSwap",
        "SyncSwapLP",
        "MaverickSwap",
        "SpaceFISwap",
        "VelocoreSwap",
        "IzumiSwap",
        "VeSyncSwap",
        "EzkaliburSwap",
        "ZkSwap"
      ],
      "default": "StargateBridge",
      "title": "- OkexBinance: deprecated"
    },
    "TransactionsDailyImpactReq": {
      "type": "object"
    },
    "TransactionsDailyImpactRes": {
      "type": "object",
      "properties": {
        "myImpact": {
          "type": "string",
          "format": "int64"
        },
        "totalImpact": {
          "type": "string",
          "format": "int64"
        },
        "topImpact": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "myImpact",
        "totalImpact",
        "topImpact"
      ]
    },
    "ValidatePKRequest": {
      "type": "object",
      "properties": {
        "pk": {
          "type": "string"
        }
      },
      "required": [
        "pk"
      ]
    },
    "ValidatePKResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "walletId": {
          "type": "string"
        }
      },
      "required": [
        "valid"
      ]
    },
    "ValidateProxyRequest": {
      "type": "object",
      "properties": {
        "proxy": {
          "type": "string"
        }
      },
      "required": [
        "proxy"
      ]
    },
    "ValidateProxyResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        }
      },
      "required": [
        "valid",
        "countryName",
        "countryCode",
        "ip",
        "errorMessage"
      ]
    }
  }
}
