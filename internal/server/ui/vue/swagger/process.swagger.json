{
  "swagger": "2.0",
  "info": {
    "title": "v1/process.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ProcessService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gw/api/v1/process/cancel": {
      "post": {
        "operationId": "ProcessService_CancelProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CancelProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/create": {
      "post": {
        "operationId": "ProcessService_CreateProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/get": {
      "post": {
        "operationId": "ProcessService_GetProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/list": {
      "post": {
        "operationId": "ProcessService_ListProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/resume": {
      "post": {
        "operationId": "ProcessService_ResumeProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ResumeProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResumeProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/retry": {
      "post": {
        "operationId": "ProcessService_RetryProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RetryProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetryProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/stop": {
      "post": {
        "operationId": "ProcessService_StopProcess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/StopProcessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopProcessRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/task/history": {
      "post": {
        "operationId": "ProcessService_GetProcessTaskHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetProcessTaskHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProcessTaskHistoryRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    },
    "/api/gw/api/v1/process/updatedAt": {
      "post": {
        "operationId": "ProcessService_GetProcessUpdatedAt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetProcessUpdatedAtResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProcessUpdatedAtRequest"
            }
          }
        ],
        "tags": [
          "ProcessService"
        ]
      }
    }
  },
  "definitions": {
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CancelProcessRequest": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        }
      },
      "required": [
        "processId"
      ]
    },
    "CancelProcessResponse": {
      "type": "object"
    },
    "CreateProcessRequest": {
      "type": "object",
      "properties": {
        "flowId": {
          "type": "string"
        },
        "profileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "flowId",
        "profileIds"
      ]
    },
    "CreateProcessResponse": {
      "type": "object",
      "properties": {
        "process": {
          "$ref": "#/definitions/Process"
        }
      },
      "required": [
        "process"
      ]
    },
    "DelayTask": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "waitFor": {
          "type": "string",
          "format": "date-time"
        },
        "random": {
          "type": "boolean"
        },
        "minRandom": {
          "type": "string",
          "format": "int64"
        },
        "maxRandom": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "duration",
        "random"
      ]
    },
    "GetProcessRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetProcessResponse": {
      "type": "object",
      "properties": {
        "process": {
          "$ref": "#/definitions/Process"
        }
      },
      "required": [
        "process"
      ]
    },
    "GetProcessTaskHistoryRequest": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        }
      },
      "required": [
        "taskId"
      ]
    },
    "GetProcessTaskHistoryResponse": {
      "type": "object",
      "properties": {
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessTaskHistoryRecord"
          }
        }
      },
      "required": [
        "records"
      ]
    },
    "GetProcessUpdatedAtRequest": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        }
      },
      "required": [
        "processId"
      ]
    },
    "GetProcessUpdatedAtResponse": {
      "type": "object",
      "properties": {
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "updatedAt"
      ]
    },
    "ListProcessRequest": {
      "type": "object"
    },
    "ListProcessResponse": {
      "type": "object",
      "properties": {
        "processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Process"
          }
        }
      },
      "required": [
        "processes"
      ]
    },
    "MockTask": {
      "type": "object"
    },
    "Network": {
      "type": "string",
      "enum": [
        "ARBITRUM",
        "OPTIMISM",
        "BinanaceBNB",
        "Etherium",
        "POLIGON",
        "AVALANCHE"
      ],
      "default": "ARBITRUM"
    },
    "Process": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessProfile"
          }
        },
        "flowId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "flowLabel": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "profiles",
        "flowId",
        "createdAt",
        "updatedAt",
        "flowLabel"
      ]
    },
    "ProcessProfile": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string"
        },
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessTask"
          }
        },
        "status": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "profileId",
        "weight",
        "tasks",
        "status",
        "id"
      ]
    },
    "ProcessStatus": {
      "type": "string",
      "enum": [
        "StatusReady",
        "StatusRunning",
        "StatusError",
        "StatusDone",
        "StatusStop",
        "StatusRetry"
      ],
      "default": "StatusReady"
    },
    "ProcessTask": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/Task"
        },
        "status": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "task",
        "status",
        "transactions",
        "id"
      ]
    },
    "ProcessTaskHistoryRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "startStatus": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "finishStatus": {
          "$ref": "#/definitions/ProcessStatus"
        },
        "msg": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "taskId",
        "startedAt",
        "startStatus"
      ]
    },
    "ResumeProcessRequest": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        }
      },
      "required": [
        "processId"
      ]
    },
    "ResumeProcessResponse": {
      "type": "object"
    },
    "RetryProcessRequest": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        }
      },
      "required": [
        "processId",
        "profileId",
        "taskId"
      ]
    },
    "RetryProcessResponse": {
      "type": "object"
    },
    "StargateBridgeTask": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "StopProcessRequest": {
      "type": "object",
      "properties": {
        "processId": {
          "type": "string"
        }
      },
      "required": [
        "processId"
      ]
    },
    "StopProcessResponse": {
      "type": "object"
    },
    "Task": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType"
        },
        "description": {
          "type": "string"
        },
        "stargateBridgeTask": {
          "$ref": "#/definitions/StargateBridgeTask"
        },
        "mockTask": {
          "$ref": "#/definitions/MockTask"
        },
        "delayTask": {
          "$ref": "#/definitions/DelayTask"
        },
        "withdrawExchangeTask": {
          "$ref": "#/definitions/WithdrawExchangeTask"
        }
      },
      "required": [
        "weight",
        "taskType",
        "description"
      ]
    },
    "TaskType": {
      "type": "string",
      "enum": [
        "StargateBridge",
        "Mock",
        "Delay",
        "WithdrawExchange"
      ],
      "default": "StargateBridge"
    },
    "Token": {
      "type": "string",
      "enum": [
        "USDT",
        "ETH",
        "USDC",
        "STG",
        "BNB",
        "MATIC",
        "AVAX"
      ],
      "default": "USDT"
    },
    "WithdrawExchangeTask": {
      "type": "object",
      "properties": {
        "withdrawerId": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "amountMin": {
          "type": "string"
        },
        "amountMax": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "withdrawOrderId": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        }
      },
      "required": [
        "withdrawerId",
        "network",
        "amountMin",
        "amountMax",
        "token",
        "withdrawOrderId"
      ]
    }
  }
}
