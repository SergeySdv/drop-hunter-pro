// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v1/task.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_StargateBridge   TaskType = 0
	TaskType_Mock             TaskType = 1
	TaskType_Delay            TaskType = 2
	TaskType_WithdrawExchange TaskType = 3
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "StargateBridge",
		1: "Mock",
		2: "Delay",
		3: "WithdrawExchange",
	}
	TaskType_value = map[string]int32{
		"StargateBridge":   0,
		"Mock":             1,
		"Delay":            2,
		"WithdrawExchange": 3,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_task_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_v1_task_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_v1_task_proto_rawDescGZIP(), []int{0}
}

type WithdrawExchangeTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawerId    string  `protobuf:"bytes,1,opt,name=withdrawer_id,json=withdrawerId,proto3" json:"withdrawer_id,omitempty"`
	Network         string  `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	AmountMin       string  `protobuf:"bytes,3,opt,name=amount_min,json=amountMin,proto3" json:"amount_min,omitempty"`
	AmountMax       string  `protobuf:"bytes,4,opt,name=amount_max,json=amountMax,proto3" json:"amount_max,omitempty"`
	Token           string  `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	WithdrawOrderId *string `protobuf:"bytes,7,opt,name=withdraw_order_id,json=withdrawOrderId,proto3,oneof" json:"withdraw_order_id,omitempty"`
	Amount          *string `protobuf:"bytes,8,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	TxId            *string `protobuf:"bytes,9,opt,name=tx_id,json=txId,proto3,oneof" json:"tx_id,omitempty"`
}

func (x *WithdrawExchangeTask) Reset() {
	*x = WithdrawExchangeTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawExchangeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawExchangeTask) ProtoMessage() {}

func (x *WithdrawExchangeTask) ProtoReflect() protoreflect.Message {
	mi := &file_v1_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawExchangeTask.ProtoReflect.Descriptor instead.
func (*WithdrawExchangeTask) Descriptor() ([]byte, []int) {
	return file_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *WithdrawExchangeTask) GetWithdrawerId() string {
	if x != nil {
		return x.WithdrawerId
	}
	return ""
}

func (x *WithdrawExchangeTask) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *WithdrawExchangeTask) GetAmountMin() string {
	if x != nil {
		return x.AmountMin
	}
	return ""
}

func (x *WithdrawExchangeTask) GetAmountMax() string {
	if x != nil {
		return x.AmountMax
	}
	return ""
}

func (x *WithdrawExchangeTask) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WithdrawExchangeTask) GetWithdrawOrderId() string {
	if x != nil && x.WithdrawOrderId != nil {
		return *x.WithdrawOrderId
	}
	return ""
}

func (x *WithdrawExchangeTask) GetAmount() string {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return ""
}

func (x *WithdrawExchangeTask) GetTxId() string {
	if x != nil && x.TxId != nil {
		return *x.TxId
	}
	return ""
}

type StargateBridgeTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNetwork Network `protobuf:"varint,1,opt,name=fromNetwork,proto3,enum=shared.Network" json:"fromNetwork,omitempty"`
	ToNetwork   Network `protobuf:"varint,2,opt,name=toNetwork,proto3,enum=shared.Network" json:"toNetwork,omitempty"`
	FromToken   Token   `protobuf:"varint,3,opt,name=fromToken,proto3,enum=shared.Token" json:"fromToken,omitempty"`
	ToToken     Token   `protobuf:"varint,4,opt,name=toToken,proto3,enum=shared.Token" json:"toToken,omitempty"`
	Fee         *string `protobuf:"bytes,5,opt,name=fee,proto3,oneof" json:"fee,omitempty"`
}

func (x *StargateBridgeTask) Reset() {
	*x = StargateBridgeTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StargateBridgeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StargateBridgeTask) ProtoMessage() {}

func (x *StargateBridgeTask) ProtoReflect() protoreflect.Message {
	mi := &file_v1_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StargateBridgeTask.ProtoReflect.Descriptor instead.
func (*StargateBridgeTask) Descriptor() ([]byte, []int) {
	return file_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *StargateBridgeTask) GetFromNetwork() Network {
	if x != nil {
		return x.FromNetwork
	}
	return Network_ARBITRUM
}

func (x *StargateBridgeTask) GetToNetwork() Network {
	if x != nil {
		return x.ToNetwork
	}
	return Network_ARBITRUM
}

func (x *StargateBridgeTask) GetFromToken() Token {
	if x != nil {
		return x.FromToken
	}
	return Token_USDT
}

func (x *StargateBridgeTask) GetToToken() Token {
	if x != nil {
		return x.ToToken
	}
	return Token_USDT
}

func (x *StargateBridgeTask) GetFee() string {
	if x != nil && x.Fee != nil {
		return *x.Fee
	}
	return ""
}

type MockTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MockTask) Reset() {
	*x = MockTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MockTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockTask) ProtoMessage() {}

func (x *MockTask) ProtoReflect() protoreflect.Message {
	mi := &file_v1_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockTask.ProtoReflect.Descriptor instead.
func (*MockTask) Descriptor() ([]byte, []int) {
	return file_v1_task_proto_rawDescGZIP(), []int{2}
}

type DelayTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration       int64                  `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	WaitFor        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=wait_for,json=waitFor,proto3,oneof" json:"wait_for,omitempty"`
	Random         bool                   `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`
	MinRandom      *int64                 `protobuf:"varint,4,opt,name=min_random,json=minRandom,proto3,oneof" json:"min_random,omitempty"`
	MaxRandom      *int64                 `protobuf:"varint,5,opt,name=max_random,json=maxRandom,proto3,oneof" json:"max_random,omitempty"`
	RandomDuration *string                `protobuf:"bytes,6,opt,name=random_duration,json=randomDuration,proto3,oneof" json:"random_duration,omitempty"`
}

func (x *DelayTask) Reset() {
	*x = DelayTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayTask) ProtoMessage() {}

func (x *DelayTask) ProtoReflect() protoreflect.Message {
	mi := &file_v1_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayTask.ProtoReflect.Descriptor instead.
func (*DelayTask) Descriptor() ([]byte, []int) {
	return file_v1_task_proto_rawDescGZIP(), []int{3}
}

func (x *DelayTask) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DelayTask) GetWaitFor() *timestamppb.Timestamp {
	if x != nil {
		return x.WaitFor
	}
	return nil
}

func (x *DelayTask) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *DelayTask) GetMinRandom() int64 {
	if x != nil && x.MinRandom != nil {
		return *x.MinRandom
	}
	return 0
}

func (x *DelayTask) GetMaxRandom() int64 {
	if x != nil && x.MaxRandom != nil {
		return *x.MaxRandom
	}
	return 0
}

func (x *DelayTask) GetRandomDuration() string {
	if x != nil && x.RandomDuration != nil {
		return *x.RandomDuration
	}
	return ""
}

var File_v1_task_proto protoreflect.FileDescriptor

var file_v1_task_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x76, 0x31, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x03, 0x0a, 0x14, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x55, 0x92, 0x41,
	0x52, 0x0a, 0x50, 0xd2, 0x01, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0xd2, 0x01, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0xd2, 0x01, 0x0a,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0xd2, 0x01, 0x0a, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0xd2, 0x01, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0xd2,
	0x01, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x22, 0xa2,
	0x02, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x67, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x31, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6f, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x09, 0x74, 0x6f,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x07, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x88, 0x01, 0x01, 0x3a, 0x35, 0x92, 0x41, 0x32, 0x0a, 0x30, 0xd2, 0x01, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0xd2, 0x01, 0x09, 0x74, 0x6f, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0xd2, 0x01, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0xd2, 0x01, 0x07, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x66, 0x65, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x22,
	0xcb, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x22, 0x0a,
	0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x3a, 0x19, 0x92, 0x41, 0x16, 0x0a, 0x14, 0xd2, 0x01, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xd2, 0x01, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x49, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x72, 0x67, 0x61, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x6f, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x03, 0x42, 0x09, 0x5a, 0x07, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_task_proto_rawDescOnce sync.Once
	file_v1_task_proto_rawDescData = file_v1_task_proto_rawDesc
)

func file_v1_task_proto_rawDescGZIP() []byte {
	file_v1_task_proto_rawDescOnce.Do(func() {
		file_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_task_proto_rawDescData)
	})
	return file_v1_task_proto_rawDescData
}

var file_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_task_proto_goTypes = []interface{}{
	(TaskType)(0),                 // 0: task.TaskType
	(*WithdrawExchangeTask)(nil),  // 1: task.WithdrawExchangeTask
	(*StargateBridgeTask)(nil),    // 2: task.StargateBridgeTask
	(*MockTask)(nil),              // 3: task.MockTask
	(*DelayTask)(nil),             // 4: task.DelayTask
	(Network)(0),                  // 5: shared.Network
	(Token)(0),                    // 6: shared.Token
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_v1_task_proto_depIdxs = []int32{
	5, // 0: task.StargateBridgeTask.fromNetwork:type_name -> shared.Network
	5, // 1: task.StargateBridgeTask.toNetwork:type_name -> shared.Network
	6, // 2: task.StargateBridgeTask.fromToken:type_name -> shared.Token
	6, // 3: task.StargateBridgeTask.toToken:type_name -> shared.Token
	7, // 4: task.DelayTask.wait_for:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_v1_task_proto_init() }
func file_v1_task_proto_init() {
	if File_v1_task_proto != nil {
		return
	}
	file_v1_shared_proto_init()
	file_v1_withdraw_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawExchangeTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StargateBridgeTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MockTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_task_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_v1_task_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_v1_task_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_task_proto_goTypes,
		DependencyIndexes: file_v1_task_proto_depIdxs,
		EnumInfos:         file_v1_task_proto_enumTypes,
		MessageInfos:      file_v1_task_proto_msgTypes,
	}.Build()
	File_v1_task_proto = out.File
	file_v1_task_proto_rawDesc = nil
	file_v1_task_proto_goTypes = nil
	file_v1_task_proto_depIdxs = nil
}
