{
  "swagger": "2.0",
  "info": {
    "title": "v1/flow.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FlowService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/gw/api/v1/flow/create": {
      "post": {
        "operationId": "FlowService_CreateFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/api/v1/flow/delete": {
      "post": {
        "operationId": "FlowService_DeleteFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/api/v1/flow/get": {
      "post": {
        "operationId": "FlowService_GetFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    },
    "/api/gw/api/v1/flow/list": {
      "post": {
        "operationId": "FlowService_ListFlow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListFlowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListFlowRequest"
            }
          }
        ],
        "tags": [
          "FlowService"
        ]
      }
    }
  },
  "definitions": {
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "CreateFlowRequest": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      },
      "required": [
        "label",
        "tasks"
      ]
    },
    "CreateFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "DelayTask": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "format": "int64"
        },
        "waitFor": {
          "type": "string",
          "format": "date-time"
        },
        "random": {
          "type": "boolean"
        },
        "minRandom": {
          "type": "string",
          "format": "int64"
        },
        "maxRandom": {
          "type": "string",
          "format": "int64"
        },
        "randomDuration": {
          "type": "string"
        }
      },
      "required": [
        "duration",
        "random"
      ]
    },
    "DeleteFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "DeleteFlowResponse": {
      "type": "object"
    },
    "GetFlowRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetFlowResponse": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "#/definitions/flow.Flow"
        }
      },
      "required": [
        "flow"
      ]
    },
    "ListFlowRequest": {
      "type": "object"
    },
    "ListFlowResponse": {
      "type": "object",
      "properties": {
        "flows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flow.Flow"
          }
        }
      },
      "required": [
        "flows"
      ]
    },
    "MockTask": {
      "type": "object"
    },
    "Network": {
      "type": "string",
      "enum": [
        "ARBITRUM",
        "OPTIMISM",
        "BinanaceBNB",
        "Etherium",
        "POLIGON",
        "AVALANCHE"
      ],
      "default": "ARBITRUM"
    },
    "StargateBridgeTask": {
      "type": "object",
      "properties": {
        "fromNetwork": {
          "$ref": "#/definitions/Network"
        },
        "toNetwork": {
          "$ref": "#/definitions/Network"
        },
        "fromToken": {
          "$ref": "#/definitions/Token"
        },
        "toToken": {
          "$ref": "#/definitions/Token"
        },
        "fee": {
          "type": "string"
        }
      },
      "required": [
        "fromNetwork",
        "toNetwork",
        "fromToken",
        "toToken"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Any"
          }
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "taskType": {
          "$ref": "#/definitions/TaskType"
        },
        "description": {
          "type": "string"
        },
        "stargateBridgeTask": {
          "$ref": "#/definitions/StargateBridgeTask"
        },
        "mockTask": {
          "$ref": "#/definitions/MockTask"
        },
        "delayTask": {
          "$ref": "#/definitions/DelayTask"
        },
        "withdrawExchangeTask": {
          "$ref": "#/definitions/WithdrawExchangeTask"
        }
      },
      "required": [
        "weight",
        "taskType",
        "description"
      ]
    },
    "TaskType": {
      "type": "string",
      "enum": [
        "StargateBridge",
        "Mock",
        "Delay",
        "WithdrawExchange"
      ],
      "default": "StargateBridge"
    },
    "Token": {
      "type": "string",
      "enum": [
        "USDT",
        "ETH",
        "USDC",
        "STG",
        "BNB",
        "MATIC",
        "AVAX"
      ],
      "default": "USDT"
    },
    "WithdrawExchangeTask": {
      "type": "object",
      "properties": {
        "withdrawerId": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "amountMin": {
          "type": "string"
        },
        "amountMax": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "withdrawOrderId": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        }
      },
      "required": [
        "withdrawerId",
        "network",
        "amountMin",
        "amountMax",
        "token",
        "withdrawOrderId"
      ]
    },
    "flow.Flow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "nextId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "label",
        "payload",
        "createdAt",
        "tasks"
      ]
    }
  }
}
