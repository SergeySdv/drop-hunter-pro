version: '3.8'

volumes:
  prometheus_data: {}

networks:
  monitoring:
    driver: bridge

services:
#  snapshot:
#    image: hardstylez72/snapshot:latest
#    restart: always
#    environment:
#      PORT: 6655

  postgres:
    image: postgres:15.1
    restart: always
    environment:
      POSTGRES_PASSWORD: 6655
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./pg/db:/var/lib/postgresql/data

#  node-exporter:
#    image: prom/node-exporter:latest
#    container_name: node-exporter
#    restart: unless-stopped
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#      - /:/host:ro
#    command:
#      - '--path.rootfs=/host'
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    expose:
#      - 9100
#    networks:
#      - monitoring
#
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    restart: unless-stopped
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--web.enable-lifecycle'
#    expose:
#      - 9090
#    networks:
#      - monitoring
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    environment:
#      GF_SECURITY_ADMIN_USER: admin
#      GF_SECURITY_ADMIN_PASSWORD: 1234
#    restart: unless-stopped
#    networks:
#      - monitoring
